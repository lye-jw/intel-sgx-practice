/*

Copyright 2018 Intel Corporation

This software and the related documents are Intel copyrighted materials,
and your use of them is governed by the express license under which they
were provided to you (License). Unless the License provides otherwise,
you may not use, modify, copy, publish, distribute, disclose or transmit
this software or the related documents without Intel's prior written
permission.

This software and the related documents are provided as is, with no
express or implied warranties, other than those that are expressly stated
in the License.

*/

#ifndef _WIN32
#include "config.h"
#endif

enclave {
	include "sgx_trts.h"
	include "sgx_utils.h"
	include "sgx_tkey_exchange.h"

	from "sgx_tkey_exchange.edl" import *;

	trusted {
#ifndef _WIN32
		include "config.h"
#endif

		public sgx_status_t get_report([out] sgx_report_t *report,
			[in] sgx_target_info_t *target_info);

#ifdef _WIN32
		public size_t get_pse_manifest_size();

		public sgx_status_t get_pse_manifest([out, count=sz] char *buf, size_t sz);
#endif

		public sgx_status_t enclave_ra_init(sgx_ec256_public_t key, int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_init_def(int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_get_key_hash(
			[out] sgx_status_t *get_keys_status, sgx_ra_context_t ctx,
			sgx_ra_key_type_t type, [out] sgx_sha256_hash_t *hash);

		public sgx_status_t enclave_ra_close(sgx_ra_context_t ctx);

        public sgx_status_t enclave_put_secret_data(sgx_ra_context_t context,
                                            [in, size=secret_size] uint8_t* p_secret,
                                            uint32_t secret_size);

		public uint32_t get_sealed_data_size(uint32_t ori_data_len);
		public sgx_status_t enclave_seal_secret([out, size=data_size] uint8_t *sealed_blob,
			uint32_t data_size);

		public sgx_status_t enclave_unseal_secret([in, out, size=data_size] uint8_t *decrypted_data,
			[in, size=data_size] const uint8_t *sealed_blob, size_t data_size);

	};

	untrusted {
#ifndef _WIN32
		include "config.h"
#endif
	};
};


